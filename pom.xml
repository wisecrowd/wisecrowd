<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                          http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>se.wisecrowd</groupId>
    <artifactId>wisecrowd</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <organization>
        <name>Kollektiva Jämförelser i Sverige AB</name>
        <url>https://www.wisecrowd.com</url>
    </organization>

    <developers>
        <developer>
            <name>Henrik Schinzel</name>
            <email>henrik@kollektiva.se</email>
        </developer>
        <developer>
            <name>Jörgen Andersson</name>
            <email>jorgen@kollektiva.se</email>
        </developer>
        <developer>
            <name>Rebecca Fransson</name>
            <email>rebecca@kollektiva.se</email>
        </developer>
    </developers>

    <properties>
        <argLine>-Xms1g -Xmx1g</argLine>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <amazonaws.version>1.11.172</amazonaws.version>
        <apache.commons.version>2.5</apache.commons.version>
        <assertj.version>3.8.0</assertj.version>
        <atexpose.version>0.9.36</atexpose.version>
        <atexpose.repo.url>http://maven-repo.atexpose.com/release</atexpose.repo.url>
        <schinzel.repo.url>http://maven-repo.schinzel.io/release</schinzel.repo.url>
        <schinzel.version>1.31</schinzel.version>
        <jackson.version>2.9.4.1</jackson.version>
        <junit.version>4.12</junit.version>
        <kmongo.version>3.6.3</kmongo.version>
        <kotlin.version>1.2.31</kotlin.version>
        <log4j.version>1.7.13</log4j.version>
        <lombok.version>1.16.18</lombok.version>
        <spark.version>1.0.0-alpha</spark.version>
        <spark.template.version>2.7.1</spark.template.version>
        <spark.test.version>1.1.6</spark.test.version>
    </properties>

    <modules>
        <module>modules</module>
    </modules>


    <build>
        <pluginManagement>
            <plugins>
                <!-- This plugin allows java code to be executed on
            maven phases such as install. At time of writing was used
            to run code that updates the CDN and so on. -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.6.0</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <testSource>1.8</testSource>
                    <testTarget>1.8</testTarget>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <!-- Enable xlint which is java's build in static analysis tool -->
                        <arg>-Xlint:all</arg>
                        <!--  Exclude processing from xlint as this cuases loads of
                         "No processor claimed any of these annotations [...]". I have not found a fix for this.
                         More info: https://bugs.eclipse.org/bugs/show_bug.cgi?id=463242-->
                        <arg>-Xlint:-processing</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.18.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <forkCount>5</forkCount>
                    <reuseForks>true</reuseForks>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>